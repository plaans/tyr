(define (domain rover)
  (:requirements :negative-preconditions
	:hierarchy
	:typing
	:method-preconditions
  )

  (:types
      rover waypoint objective camera mode lander store - object
  )

  (:predicates
     (at ?rover - rover ?wp - waypoint)
     (at_lander ?l - lander ?y - waypoint)
     (at_rock_sample ?p - waypoint)
     (at_soil_sample ?p - waypoint)
     (available ?x - rover)
     (calibrated ?i - camera ?r - rover)
     (calibration_target ?camera - camera ?objective - objective)
     (can_traverse ?rover - rover ?from ?to - waypoint)
     (channel_free ?l - lander)
     (communicated_image_data ?o - objective ?m - mode)
     (communicated_rock_data ?p - waypoint)
     (communicated_soil_data ?p - waypoint)
     (empty ?s - store)
     (equipped_for_imaging ?rover - rover)
     (equipped_for_rock_analysis ?rover - rover)
     (equipped_for_soil_analysis ?rover - rover)
     (full ?s - store)
     (have_image ?r - rover ?o - objective ?m - mode)
     (have_rock_analysis ?x - rover ?p - waypoint)
     (have_soil_analysis ?x - rover ?p - waypoint)
     (on_board ?camera - camera ?rover - rover)
     (store_of ?s - store ?rover - rover)
     (supports ?camera - camera ?mode - mode)
     (visible ?x ?y - waypoint)
     (visible_from ?objective - objective ?waypoint - waypoint)
     (visited ?mid - waypoint)
  )  
  
  (:functions 
       (recharge-duration ?x - rover)
       (recharge-duration-max ?x - rover)
       (recharge-duration-1 ?x - rover)
       (recharge-duration-2 ?x - rover)
       (recharge-duration-3 ?x - rover)
       (recharge-duration-4 ?x - rover)
       (recharge-duration-5 ?x - rover)
       (recharge-duration-6 ?x - rover)
       (recharge-duration-8 ?x - rover)
)

  (:task calibrate_abs :parameters (?rover - rover ?camera - camera))
  (:task empty-store :parameters (?s - store ?rover - rover))
  (:task get_image_data :parameters (?objective - objective ?mode - mode))
  (:task get_rock_data :parameters (?waypoint - waypoint))
  (:task get_soil_data :parameters (?waypoint - waypoint))
  (:task navigate_abs :parameters (?rover - rover ?to - waypoint))
  (:task send_image_data :parameters (?rover - rover ?objective - objective ?mode - mode))
  (:task send_rock_data :parameters (?rover - rover ?waypoint - waypoint))
  (:task send_soil_data :parameters (?rover - rover ?waypoint - waypoint))
  
  (:method m-empty-store-1
    :parameters (?s - store ?rover - rover)
    :task (empty-store ?s ?rover)
    :precondition (empty ?s)
    :subtasks ()
  )

  (:method m-empty-store-2
    :parameters (?s - store ?rover - rover)
    :task (empty-store ?s ?rover)
    :precondition (not (empty ?s))
    :subtasks (drop ?rover ?s)
  )

  (:method m-navigate_abs-1
    :parameters (?rover - rover ?from ?to - waypoint)
    :task (navigate_abs ?rover ?to)
    :precondition (at ?rover ?from)
    :ordered-subtasks (and 
        (visit ?from)
        (navigate ?rover ?from ?to)
        (unvisit ?from)
      )
  )

  (:method m-navigate_abs-2
    :parameters (?rover - rover ?to - waypoint)
    :task (navigate_abs ?rover ?to)
    :precondition (at ?rover ?to)
    :ordered-subtasks ( )
  )

  (:method m-navigate_abs-3
    :parameters (?rover - rover ?from ?to - waypoint)
    :task (navigate_abs ?rover ?to)
    :precondition (and 
        (not (at ?rover ?to))
        (can_traverse ?rover ?from ?to)
      )
    :ordered-subtasks (and 
        (navigate ?rover ?from ?to)
      )
  )

  (:method m-navigate_abs-4
    :parameters (?rover - rover ?from ?to ?mid - waypoint)
    :task (navigate_abs ?rover ?to)
    :precondition (and 
        (not (at ?rover ?to))
        (not (can_traverse ?rover ?from ?to))
        (can_traverse ?rover ?from ?mid)
        (not (visited ?mid))
      )
    :ordered-subtasks (and 
        (navigate ?rover ?from ?mid)
        (visit ?mid)
        (navigate ?rover ?mid ?to)
        (unvisit ?mid)
      )
  )

  (:method m-send_soil_data
    :parameters (?rover - rover ?waypoint ?x ?y - waypoint ?l - lander)
    :task (send_soil_data ?rover ?waypoint)
    :precondition (and 
        (at_lander ?l ?y)
        (visible ?x ?y)
      )
    :ordered-subtasks (and 
        (navigate_abs ?rover ?x)
        (communicate_soil_data ?rover ?l ?waypoint ?x ?y)
      )
  )

  (:method m-get_soil_data
    :parameters (?waypoint - waypoint ?rover - rover ?s - store)
    :task (get_soil_data ?waypoint)
    :precondition (and 
        (store_of ?s ?rover)
        (equipped_for_soil_analysis ?rover)
      )
    :ordered-subtasks (and 
        (navigate_abs ?rover ?waypoint)
        (empty-store ?s ?rover)
        (sample_soil ?rover ?s ?waypoint)
        (send_soil_data ?rover ?waypoint)
      )
  )

  (:method m-send_rock_data
    :parameters (?rover - rover ?waypoint ?x ?y - waypoint ?l - lander)
    :task (send_rock_data ?rover ?waypoint)
    :precondition (and 
        (at_lander ?l ?y)
        (visible ?x ?y)
      )
    :ordered-subtasks (and 
        (navigate_abs ?rover ?x)
        (communicate_rock_data ?rover ?l ?waypoint ?x ?y)
      )
  )

  (:method m-get_rock_data
    :parameters (?waypoint - waypoint ?rover - rover ?s - store)
    :task (get_rock_data ?waypoint)
    :precondition (and 
        (equipped_for_rock_analysis ?rover)
        (store_of ?s ?rover)
      )
    :ordered-subtasks (and 
        (navigate_abs ?rover ?waypoint)
        (empty-store ?s ?rover)
        (sample_rock ?rover ?s ?waypoint)
        (send_rock_data ?rover ?waypoint)
      )
  )

  (:method m-send_image_data
    :parameters (?rover - rover ?objective - objective ?mode - mode ?x ?y - waypoint ?l - lander)
    :task (send_image_data ?rover ?objective ?mode)
    :precondition (and 
        (at_lander ?l ?y)
        (visible ?x ?y)
      )
    :ordered-subtasks (and 
        (navigate_abs ?rover ?x)
        (communicate_image_data ?rover ?l ?objective ?mode ?x ?y)
      )
  )

  (:method m-get_image_data
    :parameters (?objective - objective ?mode - mode ?camera - camera ?rover - rover ?waypoint - waypoint)
    :task (get_image_data ?objective ?mode)
    :precondition (and 
        (equipped_for_imaging ?rover)
        (on_board ?camera ?rover)
        (supports ?camera ?mode)
        (visible_from ?objective ?waypoint)
      )
    :ordered-subtasks (and 
        (calibrate_abs ?rover ?camera)
        (navigate_abs ?rover ?waypoint)
        (take_image ?rover ?waypoint ?objective ?camera ?mode)
        (send_image_data ?rover ?objective ?mode)
      )
  )

  (:method m-calibrate_abs
    :parameters (?rover - rover ?camera - camera ?objective - objective ?waypoint - waypoint)
    :task (calibrate_abs ?rover ?camera)
    :precondition (and 
        (calibration_target ?camera ?objective)
        (visible_from ?objective ?waypoint)
      )
    :ordered-subtasks (and 
        (navigate_abs ?rover ?waypoint)
        (calibrate ?rover ?camera ?objective ?waypoint)
      )
  )
	
(:durative-action navigate
:parameters (?x - rover ?y - waypoint ?z - waypoint) 
:duration (= ?duration 5)
:condition (and (over all (can_traverse ?x ?y ?z)) (at start (available ?x)) (at start (at ?x ?y))  (at start (<= (recharge-duration ?x) (- (recharge-duration-max ?x) (recharge-duration-8 ?x))))
                (over all (visible ?y ?z))
	    )
:effect (and (at start (increase (recharge-duration ?x) (recharge-duration-8 ?x))) (at start (not (at ?x ?y))) (at end (at ?x ?z))))

(:durative-action recharge
:parameters (?x - rover ?w - waypoint)
:duration (= ?duration (recharge-duration ?x))
:condition (and (at start (at ?x ?w)) (over all (at ?x ?w)) 
					(at start (in_sun ?w)) (at start (>= (recharge-duration ?x) 0)))
:effect (and (at end (assign (recharge-duration ?x) 0)))
)


(:durative-action sample_soil
:parameters (?x - rover ?s - store ?p - waypoint)
:duration (= ?duration 10)
:condition (and (over all (at ?x ?p)) (at start (at ?x ?p)) (at start (at_soil_sample ?p)) (at start (equipped_for_soil_analysis ?x)) (at start (<= (recharge-duration ?x) (- (recharge-duration-max ?x) (recharge-duration-3 ?x)))) (at start (store_of ?s ?x)) (at start (empty ?s))
		)
:effect (and (at start (not (empty ?s))) (at end (full ?s)) (at start (increase (recharge-duration ?x) (recharge-duration-3 ?x))) (at end (have_soil_analysis ?x ?p)) (at end (not (at_soil_sample ?p)))
		)
)

(:durative-action sample_rock
:parameters (?x - rover ?s - store ?p - waypoint)
:duration (= ?duration 8)
:condition (and (over all (at ?x ?p)) (at start (at ?x ?p)) (at start (<= (recharge-duration ?x) (- (recharge-duration-max ?x) (recharge-duration-5 ?x)))) (at start (at_rock_sample ?p)) (at start (equipped_for_rock_analysis ?x)) (at start (store_of ?s ?x)) (at start (empty ?s))
		)
:effect (and (at start (not (empty ?s))) (at end (full ?s)) (at end (have_rock_analysis ?x ?p)) (at start (increase (recharge-duration ?x) (recharge-duration-5 ?x))) (at end (not (at_rock_sample ?p)))
		)
)

(:durative-action drop
:parameters (?x - rover ?y - store)
:duration (= ?duration 1)
:condition (and (at start (store_of ?y ?x)) (at start (full ?y))
		)
:effect (and (at end (not (full ?y))) (at end (empty ?y))
	)
)

(:durative-action calibrate
 :parameters (?r - rover ?i - camera ?t - objective ?w - waypoint)
 :duration (= ?duration 5)
 :condition (and (at start (equipped_for_imaging ?r)) (at start (<= (recharge-duration ?r) (- (recharge-duration-max ?r) (recharge-duration-2 ?r)))) (at start (calibration_target ?i ?t)) (over all (at ?r ?w)) (at start (visible_from ?t ?w)) (at start (on_board ?i ?r))
		)
 :effect (and (at end (calibrated ?i ?r)) (at start (increase (recharge-duration ?r) (recharge-duration-2 ?r))))
)




(:durative-action take_image
 :parameters (?r - rover ?p - waypoint ?o - objective ?i - camera ?m - mode)
 :duration (= ?duration 7)
 :condition (and (over all (calibrated ?i ?r))
			 (at start (on_board ?i ?r))
                      (over all (equipped_for_imaging ?r))
                      (over all (supports ?i ?m) )
			  (over all (visible_from ?o ?p))
                      (over all (at ?r ?p))
                      (at start (<= (recharge-duration ?r) (- (recharge-duration-max ?r) (recharge-duration-1 ?r))))
               )
 :effect (and (at end (have_image ?r ?o ?m)) (at start (increase (recharge-duration ?r) (recharge-duration-1 ?r))) (at end (not (calibrated ?i ?r)))
		)
)


(:durative-action communicate_soil_data
 :parameters (?r - rover ?l - lander ?p - waypoint ?x - waypoint ?y - waypoint)
 :duration (= ?duration 10)
 :condition (and (over all (at ?r ?x)) (over all (at_lander ?l ?y)) (at start (have_soil_analysis ?r ?p)) (at start (<= (recharge-duration ?r) (- (recharge-duration-max ?r) (recharge-duration-4 ?r))))
                   (at start (visible ?x ?y)) (at start (available ?r))(at start (channel_free ?l))
            )
 :effect (and (at start (not (available ?r))) (at start (not (channel_free ?l))) (at end (channel_free ?l))
		(at end (communicated_soil_data ?p))(at end (available ?r))(at start (increase (recharge-duration ?r) (recharge-duration-4 ?r)))
	)
)

(:durative-action communicate_rock_data
 :parameters (?r - rover ?l - lander ?p - waypoint ?x - waypoint ?y - waypoint)
 :duration (= ?duration 10)
 :condition (and (over all (at ?r ?x)) (over all (at_lander ?l ?y)) (at start (have_rock_analysis ?r ?p)) 
                   (at start (visible ?x ?y)) (at start (available ?r))(at start (channel_free ?l)) (at start (<= (recharge-duration ?r) (- (recharge-duration-max ?r) (recharge-duration-4 ?r))))
            )
 :effect (and (at start (not (available ?r))) (at start (not (channel_free ?l))) (at end (channel_free ?l))(at end (communicated_rock_data ?p))(at end (available ?r)) (at start (increase (recharge-duration ?r) (recharge-duration-4 ?r)))
          )
)


(:durative-action communicate_image_data
 :parameters (?r - rover ?l - lander ?o - objective ?m - mode ?x - waypoint ?y - waypoint)
 :duration (= ?duration 15)
 :condition (and (over all (at ?r ?x)) (over all (at_lander ?l ?y)) (at start (have_image ?r ?o ?m)) 
                   (at start (visible ?x ?y)) (at start (available ?r)) (at start (channel_free ?l)) (at start (<= (recharge-duration ?r) (- (recharge-duration-max ?r) (recharge-duration-6 ?r))))
            )
 :effect (and (at start (not (available ?r))) (at start (not (channel_free ?l))) (at end (channel_free ?l)) (at end (communicated_image_data ?o ?m)) (at end (available ?r)) (at start (increase (recharge-duration ?r) (recharge-duration-6 ?r)))
          )
)

  (:action visit
    :parameters (?waypoint - waypoint)
    :precondition ( )
    :effect (and
        (visited ?waypoint)
      )
  )

  (:action unvisit
    :parameters (?waypoint - waypoint)
    :precondition ( )
    :effect (and
        (not (visited ?waypoint))
      )
  )
)

