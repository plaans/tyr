(define (domain satellite2)
	(:requirements :negative-preconditions :typing :hierarchy :fluents :durative-actions)
(:types satellite direction instrument mode)
 (:predicates 
               (on_board ?i - instrument ?s - satellite)
	       (supports ?i - instrument ?m - mode)
	       (pointing ?s - satellite ?d - direction)
	       (power_avail ?s - satellite)
	       (power_on ?i - instrument)
	       (calibrated ?i - instrument)
	       (have_image ?d - direction ?m - mode)
	       (calibration_target ?i - instrument ?d - direction))
 
 

  (:functions (slew_time ?a ?b - direction)
            (calibration_time ?a - instrument ?d - direction)
	)

	(:task do_observation
		:parameters (?do_d - direction ?do_m - mode)
	)

	(:task activate_instrument
		:parameters (?ai_s - satellite ?ai_i - instrument)
	)

	(:task auto_calibrate
		:parameters (?ac_s - satellite ?ac_i - instrument)
	)

	(:task turn_to_abs
		:parameters (?s - satellite ?dir - direction)
	)

	(:method m-turn-noop
		:parameters (?s - satellite ?dir - direction)
		:task
			(turn_to_abs ?s ?dir)
		:subtasks (and)
	)

	(:method m-turn-do
		:parameters (?s - satellite ?dir ?prev - direction )
		:task
			(turn_to_abs ?s ?dir)
		:subtasks
		(and
			(task0
				(turn_to ?s ?dir ?prev))
		)
	)

	(:method method0
		:parameters (?mdoatt_t_d_prev - direction ?mdoatt_t_s - satellite ?mdoatt_ti_d - direction ?mdoatt_ti_i - instrument ?mdoatt_ti_m - mode)
		:task (do_observation ?mdoatt_ti_d ?mdoatt_ti_m)
		:subtasks (and
		 (task0 (activate_instrument ?mdoatt_t_s ?mdoatt_ti_i))
		 (task1 (turn_to ?mdoatt_t_s ?mdoatt_ti_d ?mdoatt_t_d_prev))
		 (task2 (take_image ?mdoatt_t_s ?mdoatt_ti_d ?mdoatt_ti_i ?mdoatt_ti_m))
		)
		:ordering (and
			(< task0 task1)
			(< task1 task2)
		)
		:constraints (and
			(not (= ?mdoatt_ti_d ?mdoatt_t_d_prev))
		)
	)

	(:method method1
		:parameters (?mdott_t_d_prev - direction ?mdott_t_s - satellite ?mdott_ti_d - direction ?mdott_ti_i - instrument ?mdott_ti_m - mode)
		:task (do_observation ?mdott_ti_d ?mdott_ti_m)
		:subtasks (and
		 (task0 (turn_to ?mdott_t_s ?mdott_ti_d ?mdott_t_d_prev))
		 (task1 (take_image ?mdott_t_s ?mdott_ti_d ?mdott_ti_i ?mdott_ti_m))
		)
		:ordering (and
			(< task0 task1)
		)
		:constraints (and
			(not (= ?mdott_ti_d ?mdott_t_d_prev))
		)
	)

	(:method method2
		:parameters (?mdoat_ti_d - direction ?mdoat_ti_i - instrument ?mdoat_ti_m - mode ?mdoat_ti_s - satellite)
		:task (do_observation ?mdoat_ti_d ?mdoat_ti_m)
		:subtasks (and
		 (task0 (activate_instrument ?mdoat_ti_s ?mdoat_ti_i))
		 (task1 (take_image ?mdoat_ti_s ?mdoat_ti_d ?mdoat_ti_i ?mdoat_ti_m))
		)
		:ordering (and
			(< task0 task1)
		)
	)

	(:method method3
		:parameters (?mdot_ti_d - direction ?mdot_ti_i - instrument ?mdot_ti_m - mode ?mdot_ti_s - satellite)
		:task (do_observation ?mdot_ti_d ?mdot_ti_m)
		:subtasks (and
		 (task0 (take_image ?mdot_ti_s ?mdot_ti_d ?mdot_ti_i ?mdot_ti_m))
		)
	)

	(:method method4
		:parameters (?maissa_ac_i - instrument ?maissa_ac_s - satellite ?maissa_sof_i - instrument)
		:task (activate_instrument ?maissa_ac_s ?maissa_ac_i)
		:subtasks (and
		 (task0 (switch_off ?maissa_sof_i ?maissa_ac_s))
		 (task1 (switch_on ?maissa_ac_i ?maissa_ac_s))
		 (task2 (auto_calibrate ?maissa_ac_s ?maissa_ac_i))
		)
		:ordering (and
			(< task0 task1)
			(< task1 task2)
		)
		:constraints (and
			(not (= ?maissa_sof_i ?maissa_ac_i))
		)
	)

	(:method method5
		:parameters (?maisa_ac_i - instrument ?maisa_ac_s - satellite)
		:task (activate_instrument ?maisa_ac_s ?maisa_ac_i)
		:subtasks (and
		 (task0 (switch_on ?maisa_ac_i ?maisa_ac_s))
		 (task1 (auto_calibrate ?maisa_ac_s ?maisa_ac_i))
		)
		:ordering (and
			(< task0 task1)
		)
	)

	(:method method6
		:parameters (?mactc_c_d - direction ?mactc_c_i - instrument ?mactc_c_s - satellite ?mactc_tt_d_prev - direction)
		:task (auto_calibrate ?mactc_c_s ?mactc_c_i)
		:subtasks (and
		 (task0 (turn_to ?mactc_c_s ?mactc_c_d ?mactc_tt_d_prev))
		 (task1 (calibrate ?mactc_c_s ?mactc_c_i ?mactc_c_d))
		)
		:ordering (and
			(< task0 task1)
		)
		:constraints (and
			(not (= ?mactc_c_d ?mactc_tt_d_prev))
		)
	)

	(:method method7
		:parameters (?macc_c_d - direction ?macc_c_i - instrument ?macc_c_s - satellite)
		:task (auto_calibrate ?macc_c_s ?macc_c_i)
		:subtasks (and
		 (task0 (calibrate ?macc_c_s ?macc_c_i ?macc_c_d))
		)
	)

	(:durative-action turn_to
   :parameters (?s - satellite ?d_new - direction ?d_prev - direction)
   :duration (= ?duration (slew_time ?d_prev ?d_new))
   :condition (and (at start (pointing ?s ?d_prev))
                   (over all (not (= ?d_new ?d_prev)))
              )
   :effect (and  (at end (pointing ?s ?d_new))
                 (at start (not (pointing ?s ?d_prev)))
           )
  )

 
  (:durative-action switch_on
   :parameters (?i - instrument ?s - satellite)
   :duration (= ?duration 2)
   :condition (and (over all (on_board ?i ?s)) 
                      (at start (power_avail ?s)))
   :effect (and (at end (power_on ?i))
                (at start (not (calibrated ?i)))
                (at start (not (power_avail ?s)))
           )
          
  )

 
  (:durative-action switch_off
   :parameters (?i - instrument ?s - satellite)
   :duration (= ?duration 1)
   :condition (and (over all (on_board ?i ?s))
                      (at start (power_on ?i)) 
                  )
   :effect (and (at start (not (power_on ?i)))
                (at end (power_avail ?s))
           )
  )

  (:durative-action calibrate
   :parameters (?s - satellite ?i - instrument ?d - direction)
   :duration (= ?duration (calibration_time ?i ?d))
   :condition (and (over all (on_board ?i ?s))
		      (over all (calibration_target ?i ?d))
                      (at start (pointing ?s ?d))
                      (over all (power_on ?i))
                      (at end (power_on ?i))
                  )
   :effect (at end (calibrated ?i)) 
  )


  (:durative-action take_image
   :parameters (?s - satellite ?d - direction ?i - instrument ?m - mode)
   :duration (= ?duration 7)
   :condition (and (over all (calibrated ?i))
                      (over all (on_board ?i ?s))
                      (over all (supports ?i ?m) )
                      (over all (power_on ?i))
                      (over all (pointing ?s ?d))
                      (at end (power_on ?i))
               )
   :effect (at end (have_image ?d ?m))
  )
)
