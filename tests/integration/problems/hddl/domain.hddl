(define (domain Fake)

  (:requirements :negative-preconditions :hierarchy :method-preconditions)

  (:types robot place)

  (:predicates
    (at ?r - robot ?p - place)
  )

  (:task go
    :parameters (?r - robot ?t - place)
  )

  (:method m_move
    :parameters (?r - robot ?f ?i ?t - place)
    :task (go ?r ?t)
    :ordered-subtasks(and 
        (t1 (move ?r ?f ?i))
    )
  )

  (:method m_nop
    :parameters (?r - robot ?t - place)
    :task (go ?r ?t)
    :precondition (and (at ?r ?t))
  )

  (:action move
    :parameters (?r - robot ?f ?t - place)
    :precondition (and 
        (at ?r ?f)
        (not (at ?r ?t))
    )
    :effect (and 
        (not (at ?r ?f)) 
        (at ?r ?t)
    )
  )
)